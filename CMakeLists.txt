cmake_minimum_required (VERSION 3.1)

IF(${UNIX})
    set (CMAKE_C_COMPILER               "clang")
    set (CMAKE_C_FLAGS_DEBUG            "-g")
    set (CMAKE_C_FLAGS_RELWITHDEBINFO   "-O2 -g")
    set (CMAKE_CXX_COMPILER             "clang++")
    set (CMAKE_CXX_FLAGS                "-Wall")
    set (CMAKE_CXX_FLAGS_DEBUG          "-g")
    set (CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g")
    set (CMAKE_CXX_STANDARD 17)
ELSEIF(${WIN32})
    # Windows specific code
    set (CMAKE_C_COMPILER               "clang-cl")
    set (CMAKE_C_FLAGS_DEBUG            "/Debug /Zi")
    set (CMAKE_C_FLAGS_RELWITHDEBINFO   "-O2 /Debug")
    set (CMAKE_CXX_COMPILER             "clang-cl")
    set (CMAKE_CXX_FLAGS_DEBUG          "/Debug /Zi")
    # set (CMAKE_CXX_FLAGS                "-Wall")
    set (CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 /Debug")
    set (CMAKE_CXX_STANDARD 17)
ENDIF(${UNIX})

# set (CMAKE_C_FLAGS                  "-Wall")
set (CMAKE_C_FLAGS_MINSIZEREL       "-Os -DNDEBUG")
set (CMAKE_C_FLAGS_RELEASE          "-O4 -DNDEBUG")
set (CMAKE_C_STANDARD 11)
set (CMAKE_CXX_FLAGS_MINSIZEREL     "-Os -DNDEBUG")
set (CMAKE_CXX_FLAGS_RELEASE        "-O4 -DNDEBUG")

project (ProjectEngine)

include_directories("${PROJECT_SOURCE_DIR}/Framework/Common")
include_directories("${PROJECT_SOURCE_DIR}/Framework/Interface")
include_directories("${PROJECT_SOURCE_DIR}/RHI")

IF(${UNIX})
    include_directories("${PROJECT_SOURCE_DIR}/Platform/Linux")
ELSEIF(${WIN32})
    include_directories("${PROJECT_SOURCE_DIR}/Platform/Windows")
ENDIF(${UNIX})

add_subdirectory(Framework)
add_subdirectory(Platform)
add_subdirectory(RHI)